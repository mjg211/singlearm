% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/des_admissable.R
\name{des_admissable}
\alias{des_admissable}
\title{Design an admissable group sequential single-arm trial for a single binary
endpoint}
\usage{
des_admissable(J = 2, pi0 = 0.1, pi1 = 0.3, alpha = 0.05,
  beta = 0.2, Nmin = 1, Nmax = 50, futility = T, efficacy = F,
  equal_n = F, ensign = F, summary = F)
}
\arguments{
\item{J}{The maximal number of stages to allow.}

\item{pi0}{The (undesirable) response probability used in the definition of
the null hypothesis.}

\item{pi1}{The (desiable) response probability at which the trial is powered.}

\item{alpha}{The desired maximal type-I error-rate.}

\item{beta}{The desired maximal type-II error-rate.}

\item{Nmin}{The minimal total sample size to allow in considered
designs.}

\item{Nmax}{The maximal total sample size to allow in considered designs.}

\item{futility}{A logical variable indicating whether early stopping for
futility should be allowed.}

\item{efficacy}{A logical variable indicating whether early stopping for
efficacy should be allowed.}

\item{equal_n}{A logical variable indicating that the sample size of each
stage should be equal.}

\item{ensign}{A logical variable indicating that the design of Ensign
\emph{et al} (1994) should be mimicked, and the first stage futility
boundary forced to be 0.}

\item{summary}{A logical variable indicating a summary of the function's
progress should be printed to the console.}
}
\value{
A list of class \code{"sa_des_admissable"} containing the following
elements
\itemize{
\item A list of lists in the slot \code{$des} containing details of the
identified admissable design(s). Each element will contain
details of each admissable design.
\item A tibble in the slot \code{$feasible}, consisting of the
identified designs which met the required operating characteristics.
\item A tibble in the slot \code{$admissable},
summarising the performance of the admissable designs.
\item A tibble in the slot \code{$weights} containing details of which design
is admissable for each considered combination of \ifelse{html}{\out{<i>w</i>
<sub>0</sub>}}{\eqn{w_0}} and \ifelse{html}{\out{<i>w</i><sub>1
</sub>}}{\eqn{w_1}}.
\item Each of the input variables as specified.
}
}
\description{
Determines admissable group sequential single-arm clinical trial designs for
a single binary primary endpoint, using exact binomial calculations.
}
\details{
\code{des_admissable()} supports the determination of admissable
group sequential single-arm clinical trial designs for a single binary
primary endpoint. For all supported designs, the following hypotheses are
tested for the response probability
\ifelse{html}{\out{<i>&pi;</i>}}{\eqn{\pi}}

\ifelse{html}{\out{<center><i>H</i><sub>0</sub> : <i>&pi;</i> &le; <i>&pi;
</i><sub>0</sub>, <i>H</i><sub>1</sub> : <i>&pi;</i> > <i>&pi;</i><sub>
0</sub>,</center>}}{\deqn{H_0 : \pi \le \pi_0,\qquad H_1 : \pi > \pi_0,}}

for \ifelse{html}{\out{<i>&pi;</i><sub>0</sub>}}{\eqn{\pi_0}},  specified
using the argument \code{pi0}.

In each instance, the optimal design is required to meet the following
operating characteristics

\ifelse{html}{\out{<center><i>P</i>(<i>&pi;</i><sub>0</sub>) &le;
<i>&alpha;</i>, <i>P</i>(<i>&pi;</i><sub>1</sub>) &ge; 1 - <i>&beta;</i>,
</center>}}{\deqn{P(\pi_0) \le \alpha,\qquad P(\pi_1) \ge 1 - \beta,}}

where \ifelse{html}{\out{<i>P</i>(<i>&pi;</i>)}}{\eqn{P(\pi)}} is the
probability of rejecting \ifelse{html}{\out{<i>H</i><sub>0</sub>}}{\eqn{H_0}}
when the true response probability is
\ifelse{html}{\out{<i>&pi;</i>}}{\eqn{\pi}}, and the values of
\ifelse{html}{\out{<i>&alpha;</i>}}{\eqn{\alpha}} and
\ifelse{html}{\out{<i>&beta;</i>}}{\eqn{\beta}} are specified using the
arguments \code{alpha} and \code{beta} respectively. Moreover,
\ifelse{html}{\out{<i>&pi;</i><sub>1</sub>}}{\eqn{\pi_1}}, satisfying
\ifelse{html}{\out{<i>&pi;</i><sub>0</sub> &lt;
<i>&pi;</i><sub>1</sub>}}{\eqn{\pi_0 < \pi_1}}, is specified using the
argument \code{pi1}.

A group sequential single-arm design for a single binary endpoint, with a
maximum of \ifelse{html}{\out{<i>J</i>}}{\eqn{J}} allowed stages (specifying
\ifelse{html}{\out{<i>J</i>}}{\eqn{J}} through the argument \code{J}) is
then indexed by three vectors: \ifelse{html}{\out{<b><i>a</i></b> =
(<i>a</i><sub>1</sub>,&hellip;,<i>a</i><sub><i>J</i></sub>)}}{\eqn{\bold{a}=
(a_1,\dots,a_J)}}, \ifelse{html}{\out{<b><i>r</i></b> = (<i>r</i><sub>1
</sub>,&hellip;,<i>r</i><sub><i>J</i></sub>)}}{\eqn{\bold{r}=
(r_1,\dots,r_J)}}, and \ifelse{html}{\out{<b><i>n</i></b> = (<i>n</i><sub>1
</sub>,&hellip;,<i>n</i><sub><i>J</i></sub>)}}{\eqn{\bold{n}=
(n_1,\dots,n_J)}}.

With these vectors, and denoting the number of responses after
\ifelse{html}{\out{<i>m</i>}}{\eqn{m}} patients have been observed by
\ifelse{html}{\out{<i>s</i><sub><i>m</i></sub>}}{\eqn{s_m}}, the stopping
rules for a trial are then as follows

\itemize{
\item For \ifelse{html}{\out{<i>j</i> = 1,&hellip;,<i>J - 1</i>}}{\eqn{j=
1\dots,J-1}}
\itemize{
\item If \ifelse{html}{\out{<i>s</i><sub><i>N</i><sub><i>j</i></sub></sub>
&le; <i>a</i><sub><i>j</i></sub>}}{\eqn{s_{N_j} \le a_j}}, then stop the
trial and do not reject \ifelse{html}{\out{<i>H</i><sub>0</sub>}}{\eqn{H_0}}.
\item Else if \ifelse{html}{\out{<i>s</i><sub><i>N</i><sub><i>j</i></sub>
</sub> &ge; <i>r</i><sub><i>j</i></sub>}}{\eqn{s_{N_j} \ge r_j}}, then stop
the trial and reject \ifelse{html}{\out{<i>H</i><sub>0</sub>}}{\eqn{H_0}}.
\item Else if \ifelse{html}{\out{<i>a</i><sub><i>j</i></sub> &lt;
<i>s</i><sub><i>N</i><sub><i>j</i></sub></sub> &lt; <i>r</i><sub><i>j</i>
</sub>}}{\eqn{a_j < s_{N_j} < r_j}}, then continute to stage
\ifelse{html}{\out{<i>j</i> + 1}}{\eqn{j+1}}.
}
\item For \ifelse{html}{\out{<i>j</i> = <i>J</i>}}{\eqn{j=J}}
\itemize{
\item If \ifelse{html}{\out{<i>s</i><sub><i>N</i><sub><i>j</i></sub></sub>
&le; <i>a</i><sub><i>j</i></sub>}}{\eqn{s_{N_j} \le a_j}}, then
do not reject \ifelse{html}{\out{<i>H</i><sub>0</sub>}}{\eqn{H_0}}.
\item Else if \ifelse{html}{\out{<i>s</i><sub><i>N</i><sub><i>j</i></sub>
</sub> &ge; <i>r</i><sub><i>j</i></sub>}}{\eqn{s_{N_j} \ge r_j}}, then reject
\ifelse{html}{\out{<i>H</i><sub>0</sub>}}{\eqn{H_0}}.
}
}
Here, \ifelse{html}{\out{<i>N</i><sub><i>j</i></sub> = <i>n</i><sub><i>1</i>
</sub> + &ctdot; + <i>n</i><sub><i>j</i></sub>}}{\eqn{N_j = n_1 + \dots
n_j}}.

The purpose of this function is then to optimise \ifelse{html}{\out{<b><i>a
</i></b>}}{\eqn{\bold{a}}}, \ifelse{html}{\out{<b><i>r</i>
</b>}}{\eqn{\bold{r}}}, and \ifelse{html}{\out{<b><i>n</i>
</b>}}{\eqn{\bold{n}}}, accounting for the chosen restrictions placed on
these vectors, and the chosen optimality criteria.

The arguments \code{Nmin}, \code{Nmax}, and \code{equal_n} allow restrictions
to be placed on \ifelse{html}{\out{<b><i>n</i></b>}}{\eqn{\bold{n}}}.
Precisely, \code{Nmin} and \code{Nmax} set an inclusive range of allowed
values for \ifelse{html}{\out{<i>N</i><sub><i>J</i></sub>}}{\eqn{N_J}}, while
if set to \code{TRUE}, \code{equal_n} enforces that \ifelse{html}{\out{<i>n
</i><sub>1</sub> = &ctdot; = <i>n</i><sub><i>J</i></sub>}}{\eqn{n_1 = \dots
= n_J}}.

The arguments \code{futility}, \code{efficacy}, and \code{ensign}
allow restrictions to be placed on
\ifelse{html}{\out{<b><i>a</i></b>}}{\eqn{\bold{a}}} and
\ifelse{html}{\out{<b><i>r</i></b>}}{\eqn{\bold{r}}}. If \code{futility} is
set to \code{FALSE}, early stopping for futility (to not reject
\ifelse{html}{\out{<i>H</i><sub>0</sub>}}{\eqn{H_0}}) is prevented by
enforcing \ifelse{html}{\out{<i>a</i><sub>1</sub> = &ctdot; = <i>a</i><sub>
<i>J</i> - 1</sub> = -&infin;}}{\eqn{a_1 = \dots = a_{J-1} = -\infty}}.
Similarly, if \code{efficacy} is set to \code{FALSE}, early stopping for
efficacy (to reject \ifelse{html}{\out{<i>H</i><sub>0</sub>}}{\eqn{H_0}}) is
prevented by enforcing \ifelse{html}{\out{<i>r</i><sub>1</sub> = &ctdot; =
<i>r</i><sub><i>J</i> - 1</sub> = &infin;}}{\eqn{r_1 = \dots = r_{J-1} =
\infty}}. Finally, if set to \code{TRUE}, \code{ensign} enforces the
restriction that \ifelse{html}{\out{<i>a</i><sub>1</sub> = 0}}{\eqn{a_1 =
0}}, as suggested for 3-stage designs by Ensign \emph{et al} (1994).

Note that to ensure a decision is made about \ifelse{html}{\out{<i>H</i><sub>
0</sub>}}{\eqn{H_0}}, this function enforces that
\ifelse{html}{\out{<i>a</i><sub><i>J</i></sub> + 1 = <i>r</i><sub>
<i>J</i>}}{\eqn{a_J + 1 = r_J}}.

To describe the admissability criteria, denote the expected sample size
when the true response probability is
\ifelse{html}{\out{<i>&pi;</i>}}{\eqn{\pi}} by
\ifelse{html}{\out{<i>ESS</i>(<i>&pi;</i>)}}{\eqn{ESS(\pi)}}.
Then, the following admissability criteria are currently supported:

The designs which minimise
\ifelse{html}{\out{<i>w</i><sub>0</sub><i>ESS</i>(<i>&pi;</i><sub>0</sub>) +
<i>w</i><sub>1</sub><i>ESS</i>(<i>&pi;</i><sub>1</sub>) +
(1 - <i>w</i><sub>0</sub> - <i>w</i><sub>1</sub>)<i>N</i><sub><i>J</i></sub>
}}{\eqn{w_0ESS(\pi_0)+w_1ESS(\pi_1)+(1-w_0-w_1)N_J}} for
\ifelse{html}{\out{0 &le; <i>w</i><sub>0</sub> + <i>w</i><sub>1</sub> &le;
1}}{\eqn{0 \le w_0+w_1 \le 1}}.
}
\examples{
# The admissable designs for the default parameters
admissable <- des_admissable()
}
\seealso{
\code{\link{opchar_admissable}}, and their associated \code{plot}
family of functions.
}
