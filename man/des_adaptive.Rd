% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/des_adaptive.R
\name{des_adaptive}
\alias{des_adaptive}
\title{Design an adaptive two-stage single-arm trial for a single binary endpoint}
\usage{
des_adaptive(pi0 = 0.1, pi1 = 0.3, alpha = 0.05, beta = 0.2,
  Nmin = 1, Nmax = 30, optimality = "null_ess", monotonic = F,
  summary = F)
}
\arguments{
\item{pi0}{The (undesirable) response probability used in the definition of
the null hypothesis.}

\item{pi1}{The (desirable) response probability used in the definition of the
alternative hypothesis.}

\item{alpha}{The desired maximal type-I error-rate.}

\item{beta}{The desired maximal type-II error-rate.}

\item{Nmin}{The minimal total sample size to allow in considered
designs.}

\item{Nmax}{The maximal total sample size to allow in considered designs.}

\item{optimality}{Choice of optimal design criteria. Must be one of
\code{"null_ess"}, \code{"alt_ess"}, or \code{"minimax"}.}

\item{monotonic}{A logical variable indicating whether the second stage
sample sizes must be monotonically decreasing across their positive range.}

\item{summary}{A logical variable indicating a summary of the function's
progress should be printed to the console.}
}
\value{
A list of class \code{"sa_des_adaptive"} containing the following
elements
\itemize{
\item A list in the slot \code{$des} containing details of the identified
optimal design.
\item A tibble in the slot \code{$feasible}, consisting of the
identified designs which met the required operating characteristics.
\item Each of the input variables as specified.
}
}
\description{
Determines adaptive two-stage single-arm clinical trial designs for a single
binary primary endpoint.
}
\details{
\code{des_adaptive()} supports the determination of adaptive two-stage
single-arm clinical trial designs for a single binary primary endpoint. For
all supported designs, the following hypotheses are tested for the response
probability \ifelse{html}{\out{<i>&pi;</i>}}{\eqn{\pi}}

\ifelse{html}{\out{<center><i>H</i><sub>0</sub> : <i>&pi;</i> = <i>&pi;
</i><sub>0</sub>, <i>H</i><sub>1</sub> : <i>&pi;</i> = <i>&pi;</i><sub>
1</sub>,</center>}}{\deqn{H_0 : \pi = \pi_0,\qquad H_1 : \pi = \pi_1,}}

for \ifelse{html}{\out{<i>&pi;</i><sub>0</sub>}}{\eqn{\pi_0}},
\ifelse{html}{\out{<i>&pi;</i><sub>1</sub>}}{\eqn{\pi_1}}, satisfying
\ifelse{html}{\out{<i>&pi;</i><sub>0</sub> &lt;
<i>&pi;</i><sub>1</sub>}}{\eqn{\pi_0 < \pi_1}}, are specified using the
arguments \code{pi0} and \code{pi1}.

In each instance, the optimal design is required to meet the following
operating characteristics

\ifelse{html}{\out{<center><i>P</i>(<i>&pi;</i><sub>0</sub>) &le;
<i>&alpha;</i>, <i>P</i>(<i>&pi;</i><sub>1</sub>) &ge; 1 - <i>&beta;</i>,
</center>}}{\deqn{P(\pi_0) \le \alpha,\qquad P(\pi_1) \ge 1 - \beta,}}

where \ifelse{html}{\out{<i>P</i>(<i>&pi;</i>)}}{\eqn{P(\pi)}} is the
probability of rejecting \ifelse{html}{\out{<i>H</i><sub>0</sub>}}{\eqn{H_0}}
when the true response probability is
\ifelse{html}{\out{<i>&pi;</i>}}{\eqn{\pi}}, and the values of
\ifelse{html}{\out{<i>&alpha;</i>}}{\eqn{\alpha}} and
\ifelse{html}{\out{<i>&beta;</i>}}{\eqn{\beta}} are specified using the
arguments \code{alpha} and \code{beta} respectively.

An adaptive two-stage single-arm design for a single binary endpoint, is
then indexed by values for
\ifelse{html}{\out{<i>n</i><sub>1</sub>}}{\eqn{n_1}}, and two vectors:
\ifelse{html}{\out{<b><i>a</i></b><sub>2</sub> =
(<i>a</i><sub>20</sub>,&hellip;,<i>a</i><sub><i>2<i>n</i><sub>1</sub>
</i></sub>)}}{\eqn{\bold{a}_2=
(a_{20},\dots,a_{2n_1})}} and \ifelse{html}{\out{<b><i>n</i></b><sub>2</sub>
= (<i>n</i><sub>20</sub>,&hellip;,<i>n</i><sub><i>2<i>n</i><sub>1</sub>
</i></sub>)}}{\eqn{\bold{n}_2=(n_{20},\dots,n_{2n_1})}}.

The purpose of this function is then to optimise the above parameters,
accounting for the chosen restrictions placed on these vectors, and the
chosen optimality criteria.

The arguments \code{Nmin} and \code{Nmax} allow restrictions
to be placed on \ifelse{html}{\out{<i>n</i><sub>1</sub>}}{\eqn{n_1}} and
\ifelse{html}{\out{<b><i>n</i></b><sub>2</sub>}}{\eqn{\bold{n}_2}}.
Precisely, \code{Nmin} and \code{Nmax} set an inclusive range of allowed
values for the possible minimal and maximal trial sample sizes.

In addition, \code{monotonic} also allows restrictions to be placed on
\ifelse{html}{\out{<b><i>n</i></b><sub>2</sub>}}{\eqn{\bold{n}_2}}.
Specifically, if \code{monotonic = TRUE}, the values in
\ifelse{html}{\out{<b><i>n</i></b><sub>2</sub>}}{\eqn{\bold{n}_2}} must be
monotonically decreasing.

To describe the supported optimality criteria, denote the expected sample
size and median required sample size when the true response probability is
\ifelse{html}{\out{<i>&pi;</i>}}{\eqn{\pi}} by
\ifelse{html}{\out{<i>ESS</i>(<i>&pi;</i>)}}{\eqn{ESS(\pi)}} and
\ifelse{html}{\out{<i>Med</i>(<i>&pi;</i>)}}{\eqn{Med(\pi)}} respectively.
Then, the following optimality criteria are currently supported:
\itemize{
\item \code{"minimax"}: The design which minimises the maximal possible
sample size.
\item \code{"null_ess"}: The design which minimises
\ifelse{html}{\out{<i>ESS</i>(<i>&pi;</i><sub>0</sub>)}}{\eqn{ESS(\pi_0)}}.
\item \code{"alt_ess"}: The design which minimises
\ifelse{html}{\out{<i>ESS</i>(<i>&pi;</i><sub>1</sub>)}}{\eqn{ESS(\pi_1)}}.
}
}
\examples{
# The null-optimal design for the default parameters
null_ess <- des_adaptive()
}
\seealso{
\code{\link{opchar_adaptive}},  and their associated \code{plot}
family of functions.
}
